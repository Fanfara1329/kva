class Person:
    def __init__(self, name, age):
        self.name = name
        self.age = age

    def __str__(self):
        return f"{self.name} {self.age}"

    def is_old(self):
        return self.age > 21


# Создаем список из 7 экземпляров класса Person
people = [
    Person("Иван", 25),
    Person("Мария", 18),
    Person("Алексей", 30),
    Person("Елена", 16),
    Person("Дмитрий", 22),
    Person("Ольга", 20),
    Person("Сергей", 19)
]

d = {person.name: person.age for person in people}

print("Все персоны:", *people, "\nПерсоны старше 18 лет:", *filter(lambda p: p.age > 18, people),
      "\nПерсоны старше 21 года:", *filter(lambda p: p.is_old(), people), "\nПерсоны, отсортированные по возрасту:",
      *sorted(people, key=lambda p: p.age), "\nСловарь персон:", d, "\nСловарь персон, отсортированный по возрасту:",
      dict(sorted(d.items(), key=lambda item: item[1])), sep='\n')
